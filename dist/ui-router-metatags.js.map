{"version":3,"sources":["ui-router-metatags.ts","ui-router-metatags.js"],"names":["uiroutermetatags","uiroutermetatags.UIRouterMetatags","uiroutermetatags.UIRouterMetatags.constructor","uiroutermetatags.UIRouterMetatags.setTitlePrefix","uiroutermetatags.UIRouterMetatags.setTitleSuffix","uiroutermetatags.UIRouterMetatags.setDefaultTitle","uiroutermetatags.UIRouterMetatags.$get","uiroutermetatags.MetaTags","uiroutermetatags.MetaTags.constructor","uiroutermetatags.MetaTags.update","uiroutermetatags.runBlock"],"mappings":"AAAA,IAAU;AAAV,CAAA,UAAU,kBAAiB;IAC1BA,IAAMA,YAAYA,QAAQA,OAAOA,sBAAsBA,CAACA;IAExDA,IAAAA,mBAAAA,CAAAA,YAAAA;;QAMCC,SAAAA,mBAAAA;YALAC,KAAAA,SAAiBA;YACjBA,KAAAA,SAAiBA;YACjBA,KAAAA,eAAuBA;;QAOvBD,iBAAAA,UAAAA,iBAAAA,UAAeA,QAAcA;YAC5BE,KAAKA,SAASA;;QAGfF,iBAAAA,UAAAA,iBAAAA,UAAeA,QAAcA;YAC5BG,KAAKA,SAASA;;QAGfH,iBAAAA,UAAAA,kBAAAA,UAAgBA,OAAaA;YAC5BI,KAAKA,eAAeA;;QAGdJ,iBAAAA,UAAAA,OAAPA,YAAAA;YACCK,OAAOA;gBACNA,QAAQA,KAAKA;gBACbA,QAAQA,KAAKA;gBACbA,cAAcA,KAAKA;;;QAGtBL,OAAAA;;IAEAD,UAAUA,SAASA,oBAAoBA;IAEvCA,IAAAA,WAAAA,CAAAA,YAAAA;;QAOCO,SAAAA,SAAmBA,kBAA2CA;YAA3CC,KAAAA,mBAAAA;;;QAInBD,SAAAA,UAAAA,SAAAA,UAAOA,MAAgCA;YACtCE,IAAIA,MAAMA;gBACTA,KAAKA,QAAQA,KAAKA,QAAQA,KAAKA,iBAAiBA,UAAUA,KAAKA,SAASA,MAAMA,KAAKA,iBAAiBA,SAASA,KAAKA,iBAAiBA;gBACnIA,KAAKA,cAAcA,KAAKA,eAAeA;gBACvCA,KAAKA,WAAWA,KAAKA,YAAYA;gBACjCA,KAAKA,aAAaA,KAAKA,cAAcA;;iBAC/BA;gBACNA,KAAKA,QAAQA,KAAKA,iBAAiBA;gBACnCA,KAAKA,cAAcA;gBACnBA,KAAKA,WAAWA;gBAChBA,KAAKA,aAAaA;;;QAGrBF,OAAAA;;IAxBaP,iBAAAA,WAAQA;IA0BrBA,UAAUA,QAAQA,YAAYA;;ICT3B,SAAS,SDYMA,MAA2BA,YAAiBA,QAAaA,UAAmCA;QAC7GU,WAAWA,WAAWA;QAEtBA,WAAWA,IAAIA,uBAAuBA,YAAAA;YACrC,IAAI,CAAC,OAAO,QAAQ,UAAU;gBAC7B,KAAK,MAAM,yBAAsB,OAAO,QAAQ,OAAI;;YAErD,SAAS,OAAO,OAAO,QAAQ;;;;IAIjCV,UAAUA,IAAIA;GA5EL,qBAAA,mBAAgB;ACgE1B","file":"ui-router-metatags.js","sourcesContent":["namespace uiroutermetatags {\r\n\tconst appModule = angular.module('ui.router.metatags', ['ui.router']);\r\n\r\n\tclass UIRouterMetatags implements angular.IServiceProvider, uiroutermetatags.IProvider {\r\n\t\tprefix: string = '';\r\n\t\tsuffix: string = '';\r\n\t\tdefaultTitle: string = '';\r\n\r\n\t\t/* @ngInject */\r\n\t\tconstructor() {\r\n\r\n\t\t}\r\n\r\n\t\tsetTitlePrefix(prefix: string): void {\r\n\t\t\tthis.prefix = prefix;\r\n\t\t}\r\n\r\n\t\tsetTitleSuffix(suffix: string): void {\r\n\t\t\tthis.suffix = suffix;\r\n\t\t}\r\n\r\n\t\tsetDefaultTitle(title: string): void {\r\n\t\t\tthis.defaultTitle = title;\r\n\t\t}\r\n\r\n\t\tpublic $get(): uiroutermetatags.IService {\r\n\t\t\treturn {\r\n\t\t\t\tprefix: this.prefix,\r\n\t\t\t\tsuffix: this.suffix,\r\n\t\t\t\tdefaultTitle: this.defaultTitle\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tappModule.provider('UIRouterMetatags', UIRouterMetatags);\r\n\r\n\texport class MetaTags {\r\n\t\ttitle: string;\r\n\t\tkeywords: string;\r\n\t\tdescription: string;\r\n\t\tproperties: {};\r\n\t\t\r\n\t\t/* @ngInject */\r\n\t\tconstructor(public UIRouterMetatags: uiroutermetatags.IService) {\r\n\r\n\t\t}\r\n\r\n\t\tupdate(tags: uiroutermetatags.IMetaTags) {\r\n\t\t\tif (tags) {\r\n\t\t\t\tthis.title = tags.title ? this.UIRouterMetatags.prefix + (tags.title || '') + this.UIRouterMetatags.suffix : this.UIRouterMetatags.defaultTitle;\r\n\t\t\t\tthis.description = tags.description || '';\r\n\t\t\t\tthis.keywords = tags.keywords || '';\r\n\t\t\t\tthis.properties = tags.properties || {};\r\n\t\t\t} else {\r\n\t\t\t\tthis.title = this.UIRouterMetatags.defaultTitle;\r\n\t\t\t\tthis.description = '';\r\n\t\t\t\tthis.keywords = '';\r\n\t\t\t\tthis.properties = {};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tappModule.service('MetaTags', MetaTags);\r\n\t\r\n\t/* @ngInject */\r\n\tfunction runBlock($log: angular.ILogService, $rootScope: any, $state: any, MetaTags: uiroutermetatags.MetaTags) {\r\n\t\t$rootScope.MetaTags = MetaTags;\r\n\r\n\t\t$rootScope.$on(\"$stateChangeSuccess\", function() {\r\n\t\t\tif (!$state.current.metaTags) {\r\n\t\t\t\t$log.debug(`MetaTags - route: \"${$state.current.name}\" does not contain any metatags`);\r\n\t\t\t}\r\n\t\t\tMetaTags.update($state.current.metaTags);\r\n\t\t});\r\n\t}\r\n\r\n\tappModule.run(runBlock);\r\n\r\n}","var uiroutermetatags;\n(function (uiroutermetatags) {\n    var appModule = angular.module('ui.router.metatags', ['ui.router']);\n    var UIRouterMetatags = (function () {\n        /* @ngInject */\n        function UIRouterMetatags() {\n            this.prefix = '';\n            this.suffix = '';\n            this.defaultTitle = '';\n        }\n        UIRouterMetatags.prototype.setTitlePrefix = function (prefix) {\n            this.prefix = prefix;\n        };\n        UIRouterMetatags.prototype.setTitleSuffix = function (suffix) {\n            this.suffix = suffix;\n        };\n        UIRouterMetatags.prototype.setDefaultTitle = function (title) {\n            this.defaultTitle = title;\n        };\n        UIRouterMetatags.prototype.$get = function () {\n            return {\n                prefix: this.prefix,\n                suffix: this.suffix,\n                defaultTitle: this.defaultTitle\n            };\n        };\n        return UIRouterMetatags;\n    })();\n    appModule.provider('UIRouterMetatags', UIRouterMetatags);\n    var MetaTags = (function () {\n        /* @ngInject */\n        function MetaTags(UIRouterMetatags) {\n            this.UIRouterMetatags = UIRouterMetatags;\n        }\n        MetaTags.prototype.update = function (tags) {\n            if (tags) {\n                this.title = tags.title ? this.UIRouterMetatags.prefix + (tags.title || '') + this.UIRouterMetatags.suffix : this.UIRouterMetatags.defaultTitle;\n                this.description = tags.description || '';\n                this.keywords = tags.keywords || '';\n                this.properties = tags.properties || {};\n            }\n            else {\n                this.title = this.UIRouterMetatags.defaultTitle;\n                this.description = '';\n                this.keywords = '';\n                this.properties = {};\n            }\n        };\n        return MetaTags;\n    })();\n    uiroutermetatags.MetaTags = MetaTags;\n    appModule.service('MetaTags', MetaTags);\n    /* @ngInject */\n    function runBlock($log, $rootScope, $state, MetaTags) {\n        $rootScope.MetaTags = MetaTags;\n        $rootScope.$on(\"$stateChangeSuccess\", function () {\n            if (!$state.current.metaTags) {\n                $log.debug(\"MetaTags - route: \\\"\" + $state.current.name + \"\\\" does not contain any metatags\");\n            }\n            MetaTags.update($state.current.metaTags);\n        });\n    }\n    appModule.run(runBlock);\n})(uiroutermetatags || (uiroutermetatags = {}));\n"],"sourceRoot":"/source/"}