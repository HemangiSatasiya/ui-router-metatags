var uiroutermetatags;!function(t){function e(t,e,r,i){function s(t,e,r,s,a){i.prerenderReady=!1}function a(e,i){i.metaTags||t.debug('MetaTags - route: "'+i.name+'" does not contain any metatags'),r.update(i.metaTags)}function o(t,e,s,a,o,n){r.prerender.statusCode=500,i.prerenderReady=!0}function n(t,e,s){r.prerender.statusCode=404,i.prerenderReady=!0}e.MetaTags=r,e.$on("$stateChangeStart",s),e.$on("$stateChangeSuccess",a),e.$on("$stateChangeError",o),e.$on("$stateNotFound",n)}var r=angular.module("ui.router.metatags",["ui.router"]),i=function(){function t(){this.prefix="",this.suffix="",this.defaultTitle="",this.defaultDescription="",this.defaultKeywords="",this.staticProperties={},this.enableOGURL=!1}return t.prototype.setTitlePrefix=function(t){return this.prefix=t,this},t.prototype.setTitleSuffix=function(t){return this.suffix=t,this},t.prototype.setDefaultTitle=function(t){return this.defaultTitle=t,this},t.prototype.setDefaultDescription=function(t){return this.defaultDescription=t,this},t.prototype.setDefaultKeywords=function(t){return this.defaultKeywords=t,this},t.prototype.setStaticProperties=function(t){return this.staticProperties=t,this},t.prototype.setOGURL=function(t){return this.enableOGURL=t,this},t.prototype.$get=function(){return{prefix:this.prefix,suffix:this.suffix,defaultTitle:this.defaultTitle,defaultDescription:this.defaultDescription,defaultKeywords:this.defaultKeywords,staticProperties:this.staticProperties,enableOGURL:this.enableOGURL}},t}();t.UIRouterMetatags=i,r.provider("UIRouterMetatags",i);var s=function(){function t(t,e,r,i,s,a,o){this.$log=t,this.UIRouterMetatags=e,this.$interpolate=r,this.$injector=i,this.$state=s,this.$location=a,this.$window=o,this.prerender={}}return t.$inject=["$log","UIRouterMetatags","$interpolate","$injector","$state","$location","$window"],t.prototype.update=function(t){var e=this;this.properties=this.UIRouterMetatags.staticProperties,this.UIRouterMetatags.enableOGURL&&(this.properties["og:url"]=this.$location.absUrl()),t?(this.title=t.title?this.UIRouterMetatags.prefix+(this.getValue(t.title)||"")+this.UIRouterMetatags.suffix:this.UIRouterMetatags.defaultTitle,this.description=t.description?this.getValue(t.description):this.UIRouterMetatags.defaultDescription,this.keywords=t.keywords?this.getValue(t.keywords):this.UIRouterMetatags.defaultKeywords,angular.forEach(t.properties,function(t,r){var i=e.getValue(t);i&&i.trim().length>0&&(e.properties[r]=i)})):(this.title=this.UIRouterMetatags.defaultTitle,this.description=this.UIRouterMetatags.defaultDescription,this.keywords=this.UIRouterMetatags.defaultKeywords),t.prerender?(this.prerender.statusCode=t.prerender.statusCode?this.getValue(t.prerender.statusCode):200,this.prerender.header=t.prerender.header?this.getValue(t.prerender.header):null):(this.prerender.statusCode=200,this.prerender.header=null),this.$window.prerenderReady=!0},t.prototype.getValue=function(t){return Array.isArray(t)?this.$injector.invoke(t,this,this.$state.$current.locals.globals):this.$interpolate(t)(this.$state.$current.locals.globals)},t}();t.MetaTags=s,r.service("MetaTags",s),e.$inject=["$log","$rootScope","MetaTags","$window"],r.run(e)}(uiroutermetatags||(uiroutermetatags={}));
//# sourceMappingURL=ui-router-metatags.min.js.map
