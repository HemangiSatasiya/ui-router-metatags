var uiroutermetatags;!function(t){function e(t,e,i,s){e.MetaTags=s,e.$on("$stateChangeSuccess",function(){i.current.metaTags||t.debug('MetaTags - route: "'+i.current.name+'" does not contain any metatags'),s.update(i.current.metaTags)})}var i=angular.module("ui.router.metatags",["ui.router"]),s=function(){function t(){this.prefix="",this.suffix="",this.defaultTitle=""}return t.prototype.setTitlePrefix=function(t){this.prefix=t},t.prototype.setTitleSuffix=function(t){this.suffix=t},t.prototype.setDefaultTitle=function(t){this.defaultTitle=t},t.prototype.$get=function(){return{prefix:this.prefix,suffix:this.suffix,defaultTitle:this.defaultTitle}},t}();t.UIRouterMetatags=s,i.provider("UIRouterMetatags",s);var r=function(){function t(t){this.UIRouterMetatags=t}return t.$inject=["UIRouterMetatags"],t.prototype.update=function(t){t?(this.title=t.title?this.UIRouterMetatags.prefix+(t.title||"")+this.UIRouterMetatags.suffix:this.UIRouterMetatags.defaultTitle,this.description=t.description||"",this.keywords=t.keywords||"",this.properties=t.properties||{}):(this.title=this.UIRouterMetatags.defaultTitle,this.description="",this.keywords="",this.properties={})},t}();t.MetaTags=r,i.service("MetaTags",r),e.$inject=["$log","$rootScope","$state","MetaTags"],i.run(e)}(uiroutermetatags||(uiroutermetatags={}));
//# sourceMappingURL=ui-router-metatags.min.js.map